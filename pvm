#!/usr/bin/env bash

## GLOBAL CONFIG
. core/config

## INCLUDES
scripts=( confirm )
for module in "${scripts[@]}"
do
  . "$MODULES_DIR/$module"
done

#######################################################
# PHP version parsing
version=$1
vmajor=`echo ${version%%.*}`
vminor=`echo ${version%.*}`
vminor=`echo ${vminor#*.}`
vpatch=`echo ${version##*.}`
vcomp=`printf "%02d%02d%02d\n" $vmajor $vminor $vpatch`
#######################################################

# Directory of php sources of specific version
srcdir="$TMP_DIR/php-$version"

# Directory this specific version gets installed into
instdir="$INSTALL_DIR/php-$version"

if [ "x$version" = 'x' ]; then
    echo 'Please specify php version'
    exit 1
fi

if [ ! -d "$srcdir" ]; then
    srcfile="$CACHE_DIR/php-$version.tar.bz2"
    
    if [ ! -f "$srcfile" ]; then

        url="http://museum.php.net/php$vmajor/php-$version.tar.bz2"
        wget -P "$CACHE_DIR" "$url"
        
        if [ ! -f "$srcfile" ]; then
            url="http://www.php.net/get/php-$version.tar.bz2/from/this/mirror"
            wget -P "$CACHE_DIR" -O "$srcfile" "$url"
        fi

        if [ ! -f "$srcfile" ]; then
            echo "Fetching sources failed:"
            echo $url
            exit 2
        fi
    fi
   
    cd $TMP_DIR
    tar xjvf "$srcfile"
    cd $BASE_DIR
fi

source 'options.sh' "$version" "$vmajor" "$vminor" "$vpatch"
cd "$srcdir"
#configuring
#TODO: do not configure when config.nice exists
./configure \
 --prefix="$instdir" \
 --exec-prefix="$instdir" \
 --enable-debug \
 --disable-short-tags \
 --without-pear \
 $configoptions

if [ $? -gt 0 ]; then
    echo configure.sh failed.
    exit 3
fi

#compile sources
#make clean
make
if [ "$?" -gt 0 ]; then
    echo make failed.
    exit 4
fi

confirm "Are you sure you want to install here: $instdir?"
if [ $? -eq 1 ]; then
  exit
fi

make install
if [ "$?" -gt 0 ]; then
    echo make install failed.
    exit 5
fi

#copy php.ini
initarget="$instdir/lib/php.ini"
if [ -f "php.ini-development" ]; then
    #php 5.3
    cp "php.ini-development" "$initarget"
elif [ -f "php.ini-recommended" ]; then
    #php 5.1, 5.2
    cp "php.ini-recommended" "$initarget"
else
    echo "No php.ini file found."
    echo "Please copy it manually to $instdir/lib/php.ini"
fi
#set default ini values
cd "$basedir"
if [ -f "$initarget" ]; then
    #fixme: make the options unique or so
    custom="custom-php.ini"
    [ ! -f $custom ] && cp "default-custom-php.ini" "$custom"
    [ -f $custom ] && cat "$custom" >> "$initarget"
    custom="custom-php-$vmajor.ini"
    [ -f $custom ] && cat "$custom" >> "$initarget"
    custom="custom-php-$vmajor.$vminor.ini"
    [ -f $custom ] && cat "$custom" >> "$initarget"
    custom="custom-php-$vmajor.$vminor.$vpatch.ini"
    [ -f $custom ] && cat "$custom" >> "$initarget"
fi

#create bin
[ ! -d "$BIN_DIR" ] && mkdir "$BIN_DIR"
if [ ! -d "$BIN_DIR" ]; then
    echo "Cannot create shared bin dir"
    exit 6
fi
#symlink all files

#php may be called php.gcno
bphp="$instdir/bin/php"
bphpgcno="$instdir/bin/php.gcno"
if [ -f "$bphp" ]; then 
    ln -fs "$bphp" "$BIN_DIR/php-$version"
elif [ -f "$bphpgcno" ]; then
    ln -fs "$bphpgcno" "$BIN_DIR/php-$version"
else
    echo "no php binary found"
    exit 7    
fi

#php-cgi may be called php.gcno
bphpcgi="$instdir/bin/php-cgi"
bphpcgigcno="$instdir/bin/php-cgi.gcno"
if [ -f "$bphpcgi" ]; then 
    ln -fs "$bphpcgi" "$BIN_DIR/php-cgi-$version"
elif [ -f "$bphpcgigcno" ]; then
    ln -fs "$bphpcgigcno" "$BIN_DIR/php-cgi-$version"
else
    echo "no php-cgi binary found"
    exit 8
fi

ln -fs "$instdir/bin/php-config" "$BIN_DIR/php-config-$version"
ln -fs "$instdir/bin/phpize" "$BIN_DIR/phpize-$version"

# TODO re-enable pyrus installer
#
# cd "$basedir"
# ./pyrus.sh "$version" "$instdir"
